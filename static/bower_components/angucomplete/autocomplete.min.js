var app=angular.module("autocomplete",[]);app.directive("autocomplete",function(){var a=-1;return{restrict:"E",scope:{searchParam:"=ngModel",suggestions:"=data",onType:"=onType",onSelect:"=onSelect",autocompleteRequired:"="},controller:["$scope",function(b){b.selectedIndex=-1;b.initLock=true;b.setIndex=function(d){b.selectedIndex=parseInt(d)};this.setIndex=function(d){b.setIndex(d);b.$apply()};b.getIndex=function(d){return b.selectedIndex};var c=true;b.completing=false;b.$watch("searchParam",function(e,d){if(d===e||(!d&&b.initLock)){return}if(c&&typeof b.searchParam!=="undefined"&&b.searchParam!==null){b.completing=true;b.searchFilter=b.searchParam;b.selectedIndex=-1}if(b.onType){b.onType(b.searchParam)}});this.preSelect=function(d){c=false;b.$apply();c=true};b.preSelect=this.preSelect;this.preSelectOff=function(){c=true};b.preSelectOff=this.preSelectOff;b.select=function(d){if(d){b.searchParam=d.name.first;b.searchFilter=d.name.first;if(b.onSelect){b.onSelect(d)}}c=false;b.completing=false;setTimeout(function(){c=true},1000);b.setIndex(-1)}}],link:function(g,f,d){setTimeout(function(){g.initLock=false;g.$apply()},250);var b="";g.attrs={placeholder:"start typing...","class":"",id:"",inputclass:"",inputid:""};for(var c in d){b=c.replace("attr","").toLowerCase();if(c.indexOf("attr")===0){g.attrs[b]=d[c]}}if(d.clickActivation){f[0].onclick=function(h){if(!g.searchParam){setTimeout(function(){g.completing=true;g.$apply()},200)}}}var e={left:37,up:38,right:39,down:40,enter:13,esc:27,tab:9};document.addEventListener("keydown",function(i){var h=i.keyCode||i.which;switch(h){case e.esc:g.select();g.setIndex(-1);g.$apply();i.preventDefault()}},true);document.addEventListener("blur",function(h){setTimeout(function(){g.select();g.setIndex(-1);g.$apply()},150)},true);f[0].addEventListener("keydown",function(j){var h=j.keyCode||j.which;var i=angular.element(this).find("li").length;if(!g.completing||i==0){return}switch(h){case e.up:a=g.getIndex()-1;if(a<-1){a=i-1}else{if(a>=i){a=-1;g.setIndex(a);g.preSelectOff();break}}g.setIndex(a);if(a!==-1){g.preSelect(angular.element(angular.element(this).find("li")[a]).text())}g.$apply();break;case e.down:a=g.getIndex()+1;if(a<-1){a=i-1}else{if(a>=i){a=-1;g.setIndex(a);g.preSelectOff();g.$apply();break}}g.setIndex(a);if(a!==-1){g.preSelect(angular.element(angular.element(this).find("li")[a]).text())}break;case e.left:break;case e.right:case e.enter:case e.tab:a=g.getIndex();if(a!==-1){g.select(angular.element(angular.element(this).find("li")[a]).text());if(h==e.enter){j.preventDefault()}}else{if(h==e.enter){g.select()}}g.setIndex(-1);g.$apply();break;case e.esc:g.select();g.setIndex(-1);g.$apply();j.preventDefault();break;default:return}})},template:'        <div class="autocomplete {{ attrs.class }}" id="{{ attrs.id }}">          <input            type="text"            ng-model="searchParam"            placeholder="{{ attrs.placeholder }}"            class="{{ attrs.inputclass }}"            id="{{ attrs.inputid }}"            ng-required="{{ autocompleteRequired }}" />          <ul ng-show="completing && (suggestions | filter:searchFilter).length > 0">            <li style="padding:10px 12px;"              suggestion              ng-repeat="suggestion in suggestions | filter:searchFilter | orderBy:\'toString()\' track by $index"              index="{{ $index }}"              val="{{ suggestion.name.first }} {{ suggestion.name.last }}"              ng-class="{ active: ($index === selectedIndex) }"              ng-click="select(suggestion)"              >              <img style="width:50px;" ng-src="{{ suggestion.picture.thumbnail }}"/>              <span>                <label style="cursor:pointer;">{{ suggestion.name.first }} {{ suggestion.name.last }}</label>              </span>            </li>          </ul>        </div>'}});app.filter("highlight",["$sce",function(a){return function(b,e){if(typeof b==="function"){return""}if(e){var d="("+e.split(/\ /).join(" |")+"|"+e.split(/\ /).join("|")+")",c=new RegExp(d,"gi");if(d.length){b=b.replace(c,'<span class="highlight">$1</span>')}}return a.trustAsHtml(b)}}]);app.directive("suggestion",function(){return{restrict:"A",require:"^autocomplete",link:function(d,c,b,a){c.bind("mouseenter",function(){a.preSelect(b.val);a.setIndex(b.index)});c.bind("mouseleave",function(){a.preSelectOff()})}}});